name: 🔄 CI - Continuous Integration

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '20.x'
  CACHE_VERSION: v1

jobs:
  quality-checks:
    name: 🔍 Code Quality & Security
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🎨 Code formatting check
        run: npm run lint

      - name: 🔍 TypeScript type checking
        run: npm run type-check

      - name: 🛡️ Security audit
        run: npm audit --audit-level=high
        continue-on-error: true

  tests:
    name: 🧪 Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: quality-checks
    
    strategy:
      matrix:
        node-version: ['18.x', '20.x']
      fail-fast: false

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🧪 Run unit tests
        run: npm test -- --coverage --reporter=verbose

      - name: 📊 Upload coverage to Codecov
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false
          verbose: true

  build:
    name: 🏗️ Build Application
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [quality-checks, tests]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🏗️ Build application
        run: npm run build

      - name: 💾 Cache build artifacts
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
            .next/static
            .next/standalone
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: |
            .next
            public
          retention-days: 1

  status-check:
    name: ✅ CI Status
    runs-on: ubuntu-latest
    needs: [quality-checks, tests, build]
    if: always()
    
    steps:
      - name: 📋 Check CI results
        run: |
          if [[ "${{ needs.quality-checks.result }}" == "success" && 
                "${{ needs.tests.result }}" == "success" && 
                "${{ needs.build.result }}" == "success" ]]; then
            echo "✅ All CI checks passed successfully!"
            exit 0
          else
            echo "❌ Some CI checks failed:"
            echo "  Quality checks: ${{ needs.quality-checks.result }}"
            echo "  Tests: ${{ needs.tests.result }}"
            echo "  Build: ${{ needs.build.result }}"
            exit 1
          fi