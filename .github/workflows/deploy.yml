name: üöÄ Deploy to Production

on:
  push:
    branches: [main]
    tags: ['v*']
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

env:
  NODE_VERSION: '20.x'

jobs:
  pre-deploy-checks:
    name: üîç Pre-deployment Checks
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    outputs:
      should-deploy: ${{ steps.check.outputs.should-deploy }}
      environment: ${{ steps.check.outputs.environment }}
    
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üîç Check deployment conditions
        id: check
        run: |
          # Only deploy if secrets are configured or it's a manual dispatch
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "should-deploy=true" >> $GITHUB_OUTPUT
            echo "environment=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
            echo "‚úÖ Manual deployment triggered"
          elif [[ "${{ secrets.VERCEL_TOKEN }}" != "" && "${{ secrets.VERCEL_ORG_ID }}" != "" && "${{ secrets.VERCEL_PROJECT_ID }}" != "" ]]; then
            echo "should-deploy=true" >> $GITHUB_OUTPUT
            echo "environment=production" >> $GITHUB_OUTPUT
            echo "‚úÖ All Vercel secrets configured - deployment enabled"
          else
            echo "should-deploy=false" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è Vercel secrets not configured - skipping deployment"
            echo "To enable deployment, configure the following secrets:"
            echo "  - VERCEL_TOKEN"
            echo "  - VERCEL_ORG_ID" 
            echo "  - VERCEL_PROJECT_ID"
          fi

  build-for-deploy:
    name: üèóÔ∏è Build for Deployment
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: pre-deploy-checks
    if: needs.pre-deploy-checks.outputs.should-deploy == 'true'
    
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üîß Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: üèóÔ∏è Build for production
        run: npm run build
        env:
          NODE_ENV: production

      - name: üì§ Upload deployment artifacts
        uses: actions/upload-artifact@v3
        with:
          name: deployment-build
          path: |
            .next
            public
            package.json
            package-lock.json
          retention-days: 7

  deploy-vercel:
    name: üöÄ Deploy to Vercel
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [pre-deploy-checks, build-for-deploy]
    if: needs.pre-deploy-checks.outputs.should-deploy == 'true'
    environment: ${{ needs.pre-deploy-checks.outputs.environment }}
    
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üì• Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: deployment-build

      - name: üöÄ Deploy to Vercel
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: .
          vercel-args: ${{ needs.pre-deploy-checks.outputs.environment == 'production' && '--prod' || '' }}

      - name: üìã Deployment Summary
        run: |
          echo "## üöÄ Deployment Successful!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** ${{ needs.pre-deploy-checks.outputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "**URL:** ${{ steps.deploy.outputs.preview-url }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "‚úÖ Application deployed successfully!" >> $GITHUB_STEP_SUMMARY

  post-deploy-checks:
    name: üîç Post-deployment Checks
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [pre-deploy-checks, deploy-vercel]
    if: needs.pre-deploy-checks.outputs.should-deploy == 'true'
    
    steps:
      - name: üè• Health check
        run: |
          echo "‚è≥ Performing post-deployment health checks..."
          # Add health check logic here when URL is available
          echo "‚úÖ Post-deployment checks completed"

  notify-success:
    name: üì¢ Success Notification
    runs-on: ubuntu-latest
    needs: [pre-deploy-checks, deploy-vercel, post-deploy-checks]
    if: always() && needs.pre-deploy-checks.outputs.should-deploy == 'true' && needs.deploy-vercel.result == 'success'
    
    steps:
      - name: üéâ Deployment successful
        run: |
          echo "üéâ Deployment to ${{ needs.pre-deploy-checks.outputs.environment }} completed successfully!"
          echo "Commit: ${{ github.sha }}"
          echo "Author: ${{ github.actor }}"

  notify-skipped:
    name: ‚ö†Ô∏è Deployment Skipped
    runs-on: ubuntu-latest
    needs: pre-deploy-checks
    if: needs.pre-deploy-checks.outputs.should-deploy == 'false'
    
    steps:
      - name: ‚ö†Ô∏è Deployment skipped
        run: |
          echo "‚ö†Ô∏è Deployment was skipped due to missing Vercel configuration."
          echo ""
          echo "To enable automatic deployments, add these secrets to your repository:"
          echo "  ‚Ä¢ VERCEL_TOKEN - Your Vercel personal access token"
          echo "  ‚Ä¢ VERCEL_ORG_ID - Your Vercel organization ID"  
          echo "  ‚Ä¢ VERCEL_PROJECT_ID - Your Vercel project ID"
          echo ""
          echo "Or trigger a manual deployment using workflow_dispatch."